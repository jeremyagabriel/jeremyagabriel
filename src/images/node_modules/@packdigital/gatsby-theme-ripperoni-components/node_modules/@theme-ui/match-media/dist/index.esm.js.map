{"version":3,"file":"index.esm.js","sources":["../src/index.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react'\nimport { useThemeUI } from 'theme-ui'\n\n// Shared with @theme-ui/css\nconst defaultBreakpoints = [40, 52, 64].map(n => n + 'em')\n\nexport const useBreakpointIndex = (options = {}) => {\n  const context = useThemeUI()\n  const { defaultIndex = 0 } = options\n  const breakpoints =\n    (context.theme && context.theme.breakpoints) || defaultBreakpoints\n\n  const getIndex = useCallback(() => {\n    if (typeof window === 'undefined') {\n      if (typeof defaultIndex === 'number') {\n        if (defaultIndex < 0 || defaultIndex > breakpoints.length - 1) {\n          throw new RangeError(\n            `Default breakpoint index out of range. Theme has ${breakpoints.length} breakpoints, got index ${defaultIndex}`\n          )\n        }\n        return defaultIndex\n      }\n      throw new TypeError(\n        `Default breakpoint index should be a number. Got: ${defaultIndex}, ${typeof defaultIndex}`\n      )\n    }\n\n    return breakpoints.filter(\n      breakpoint =>\n        window.matchMedia(`screen and (min-width: ${breakpoint})`).matches\n    ).length\n  }, [breakpoints, defaultIndex])\n\n  const [value, setValue] = useState(getIndex)\n\n  useEffect(() => {\n    const onResize = () => {\n      const newValue = getIndex()\n      if (value !== newValue) {\n        setValue(newValue)\n      }\n    }\n    window.addEventListener('resize', onResize)\n    return () => window.removeEventListener('resize', onResize)\n  }, [breakpoints, getIndex, value])\n\n  return value\n}\n\nexport const useResponsiveValue = (values, options) => {\n  const { theme } = useThemeUI()\n  const array = typeof values === 'function' ? values(theme) : values\n  const index = useBreakpointIndex(options)\n  return array[index >= array.length ? array.length - 1 : index]\n}\n"],"names":["const","defaultBreakpoints","map","n","useBreakpointIndex","options","context","useThemeUI","breakpoints","theme","getIndex","useCallback","window","defaultIndex","length","RangeError","TypeError","filter","breakpoint","matchMedia","matches","useState","value","setValue","useEffect","onResize","newValue","addEventListener","removeEventListener","useResponsiveValue","values","array","index"],"mappings":";;;AAIAA,IAAMC,kBAAkB,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAaC,GAAb,WAAiBC,YAAKA,CAAC,GAAG,OAA1B,CAA3B;AAEA,IAAaC,kBAAkB,aAAIC,OAAD;mCAAQ,GAAG;;MACrCC,OAAO,GAAGC,UAAU,EAA1B;yFACuB;MACjBC,WAAW,GACdF,OAAO,CAACG,KAAR,IAAiBH,OAAO,CAACG,KAAR,CAAcD,WAAhC,IAAgDP,kBADlD;MAGMS,QAAQ,GAAGC,WAAW;QACtB,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;UAC7B,OAAOC,YAAP,KAAwB,QAA5B,EAAsC;YAChCA,YAAY,GAAG,CAAf,IAAoBA,YAAY,GAAGL,WAAW,CAACM,MAAZ,GAAqB,CAA5D,EAA+D;gBACvD,IAAIC,UAAJ,yDACgDP,WAAW,CAACM,OAAO,gCAA0BD,YAAa,EADhH;;;eAIKA,YAAP;;;YAEI,IAAIG,SAAJ,yDACiDH,YAAa,WAAI,OAAOA,YAAa,GAD5F;;;WAKKL,WAAW,CAACS,MAAZ,WACLC,qBACEN,MAAM,CAACO,UAAP,8BAA4CD,UAAW,SAAIE,UAFxD,EAGLN,MAHF;GAf0B,EAmBzB,CAACN,WAAD,EAAcK,YAAd,CAnByB,CAA5B;YAqB0BQ,QAAQ,CAACX,QAAD;EAA3BY;EAAOC;EAEdC,SAAS;QACDC,QAAQ;UACNC,QAAQ,GAAGhB,QAAQ,EAAzB;;UACIY,KAAK,KAAKI,QAAd,EAAwB;QACtBH,QAAQ,CAACG,QAAD,CAAR;;KAHJ;;IAMAd,MAAM,CAACe,gBAAP,CAAwB,QAAxB,EAAkCF,QAAlC;gCACab,MAAM,CAACgB,mBAAP,CAA2B,QAA3B,EAAqCH,QAArC,IAAb;GARO,EASN,CAACjB,WAAD,EAAcE,QAAd,EAAwBY,KAAxB,CATM,CAAT;SAWOA,KAAP;CAxCK;AA2CP,IAAaO,kBAAkB,aAAIC,MAAD,EAASzB,OAAT;YACdE,UAAU;EAApBE;MACFsB,KAAK,GAAG,OAAOD,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAACrB,KAAD,CAArC,GAA+CqB,MAA7D;MACME,KAAK,GAAG5B,kBAAkB,CAACC,OAAD,CAAhC;SACO0B,KAAK,CAACC,KAAK,IAAID,KAAK,CAACjB,MAAf,GAAwBiB,KAAK,CAACjB,MAAN,GAAe,CAAvC,GAA2CkB,KAA5C,CAAZ;CAJK;;;;"}